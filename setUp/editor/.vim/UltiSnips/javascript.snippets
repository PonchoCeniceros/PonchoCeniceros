#                            _      
#   ___ ___  _ __  ___  ___ | | ___ 
#  / __/ _ \| '_ \/ __|/ _ \| |/ _ \
# | (_| (_) | | | \__ \ (_) | |  __/
#  \___\___/|_| |_|___/\___/|_|\___|
#                                   
snippet log "console.log()" b
console.log($1);
endsnippet

snippet err "console.err()" b
console.err($1);
endsnippet

snippet dir "console.dir()" b
console.dir($1, {depth: null, colors: true});
endsnippet
#  _                            _          ___                                _       
# (_)_ __ ___  _ __   ___  _ __| |_ ___   ( _ )     _____  ___ __   ___  _ __| |_ ___ 
# | | '_ ` _ \| '_ \ / _ \| '__| __/ __|  / _ \/\  / _ \ \/ / '_ \ / _ \| '__| __/ __|
# | | | | | | | |_) | (_) | |  | |_\__ \ | (_>  < |  __/>  <| |_) | (_) | |  | |_\__ \
# |_|_| |_| |_| .__/ \___/|_|   \__|___/  \___/\/  \___/_/\_\ .__/ \___/|_|   \__|___/
#             |_|                                           |_|                       
#
snippet imp "import from ''" b
import { $2 } from '$1';
endsnippet

snippet ed "export default ''" b
export default $1
endsnippet
#                  _             _       _                   _                       
#   ___ ___  _ __ | |_ _ __ ___ | |  ___| |_ _ __ _   _  ___| |_ _   _ _ __ ___  ___ 
#  / __/ _ \| '_ \| __| '__/ _ \| | / __| __| '__| | | |/ __| __| | | | '__/ _ \/ __|
# | (_| (_) | | | | |_| | | (_) | | \__ \ |_| |  | |_| | (__| |_| |_| | | |  __/\__ \
#  \___\___/|_| |_|\__|_|  \___/|_| |___/\__|_|   \__,_|\___|\__|\__,_|_|  \___||___/
#                                                                                    
snippet cf "() {}" b
$1 ($2) {
 $3
}
endsnippet
#                  _       _     _           
# __   ____ _ _ __(_) __ _| |__ | | ___  ___ 
# \ \ / / _` | '__| |/ _` | '_ \| |/ _ \/ __|
#  \ V / (_| | |  | | (_| | |_) | |  __/\__ \
#   \_/ \__,_|_|  |_|\__,_|_.__/|_|\___||___/
#                                            
snippet arr "= []" b
const $1 = [
 $2
];
endsnippet

snippet des "const {} =" b
const { $1 } = $2;
endsnippet

snippet desa "const [] =" b
const [$1] = $2;
endsnippet
#                                  __                  _   _                 
#   __ _ _ __ _ __ _____      __  / _|_   _ _ __   ___| |_(_) ___  _ __  ___ 
#  / _` | '__| '__/ _ \ \ /\ / / | |_| | | | '_ \ / __| __| |/ _ \| '_ \/ __|
# | (_| | |  | | | (_) \ V  V /  |  _| |_| | | | | (__| |_| | (_) | | | \__ \
#  \__,_|_|  |_|  \___/ \_/\_/   |_|  \__,_|_| |_|\___|\__|_|\___/|_| |_|___/
#                                                                            
snippet fn "() => {}" i
const $1 = ${2:($3)} => ${4:{
 $5
}};
endsnippet

snippet clb "() => {}" i
${2:($3)} => ${4:{
 $5
}}
endsnippet
#                      _                                                      _       
#  _ __ ___  __ _  ___| |_    ___ ___  _ __ ___  _ __   ___  _ __   ___ _ __ | |_ ___ 
# | '__/ _ \/ _` |/ __| __|  / __/ _ \| '_ ` _ \| '_ \ / _ \| '_ \ / _ \ '_ \| __/ __|
# | | |  __/ (_| | (__| |_  | (_| (_) | | | | | | |_) | (_) | | | |  __/ | | | |_\__ \
# |_|  \___|\__,_|\___|\__|  \___\___/|_| |_| |_| .__/ \___/|_| |_|\___|_| |_|\__|___/
#                                               |_|                                   
#
snippet rfc "React function component" 
const $1 = ${2:($3)} => {
 return (
  <$4>
   $5
  </$4>
 );
};

export default $1;
endsnippet

snippet rnfc "React nextjs function component" b
export default function $1(${2:($3)}) {
 return (
  <$4>
   $5
  </$4>
 );
};
endsnippet

snippet rcc "React class component" b
import { Component } from 'react';

class $1 extends Component {
 render() {
  return (
   <div>
    ${2:// here...}
		 </div>
  );
 }
};

export default $1;
endsnippet
#                      _     _                 _        
#  _ __ ___  __ _  ___| |_  | |__   ___   ___ | | _____ 
# | '__/ _ \/ _` |/ __| __| | '_ \ / _ \ / _ \| |/ / __|
# | | |  __/ (_| | (__| |_  | | | | (_) | (_) |   <\__ \
# |_|  \___|\__,_|\___|\__| |_| |_|\___/ \___/|_|\_\___/
#                                                       
#
snippet uses "const [] = useState" b
const [$1] = useState($2);
endsnippet

snippet usee "useEffect(...)" b
useEffect(() => {
 $1
}$2);
endsnippet


snippet retf "() => {}" b
return () => {
 $1
};
endsnippet
